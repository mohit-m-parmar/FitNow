{"ast":null,"code":"var _jsxFileName = \"/Users/sarvesh/Desktop/FIT-NOW/fit_now_admin/src/components/dialogbox/Register.js\";\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../../index';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { toggleReg, signIn, setUser } from '../../global/Reducer';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }));\n}); // This function will register the user into our MongoDB database.\n\nexport default function Register() {\n  const app = useContext(AppContext);\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPass] = useState('');\n  const [repass, setRepass] = useState('');\n\n  const handleClose = () => {\n    app.dispatch(toggleReg());\n  };\n\n  function register() {\n    if (repass === password) {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n          name\n        })\n      };\n      fetch('http://127.0.0.1:5001/admin/signup', requestOptions).then(response => response.json()).then(data => {\n        if (data.message === \"new Admin registered\") {\n          app.dispatch(setUser(data.createdUser));\n          console.log(data);\n          app.dispatch(signIn());\n        } else {\n          alert(data.message);\n        }\n      });\n    } else {\n      alert(\"Password didn't matched.. Try again\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: app.state.register,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Name\",\n    type: \"text\",\n    onChange: event => {\n      setName(event.target.value);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Email Address\",\n    type: \"email\",\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Password\",\n    type: \"password\",\n    onChange: event => {\n      setPass(event.target.value);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    label: \"Re-type password\",\n    type: \"password\",\n    onChange: event => {\n      setRepass(event.target.value);\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: register,\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Register\")));\n}","map":{"version":3,"sources":["/Users/sarvesh/Desktop/FIT-NOW/fit_now_admin/src/components/dialogbox/Register.js"],"names":["React","useContext","useState","AppContext","TextField","Button","Dialog","DialogActions","DialogContent","DialogTitle","Slide","toggleReg","signIn","setUser","Transition","forwardRef","props","ref","Register","app","email","setEmail","name","setName","password","setPass","repass","setRepass","handleClose","dispatch","register","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","message","createdUser","console","log","alert","state","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,EAAmBC,MAAnB,EAA0BC,OAA1B,QAAyC,sBAAzC;AAEA,MAAMC,UAAU,GAAGd,KAAK,CAACe,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAClE,sBAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,GAAG,EAAEA;AAA7B,KAAsCD,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFkB,CAAnB,C,CAIA;;AACA,eAAe,SAASE,QAAT,GAAoB;AAC/B,QAAMC,GAAG,GAAGlB,UAAU,CAACE,UAAD,CAAtB;AACA,QAAM,CAACiB,KAAD,EAAOC,QAAP,IAAmBnB,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACoB,IAAD,EAAMC,OAAN,IAAiBrB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACsB,QAAD,EAAUC,OAAV,IAAqBvB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACwB,MAAD,EAAQC,SAAR,IAAqBzB,QAAQ,CAAC,EAAD,CAAnC;;AAEF,QAAM0B,WAAW,GAAG,MAAM;AACxBT,IAAAA,GAAG,CAACU,QAAJ,CAAalB,SAAS,EAAtB;AACD,GAFD;;AAIA,WAASmB,QAAT,GAAmB;AACf,QAAGJ,MAAM,KAAGF,QAAZ,EAAqB;AACnB,YAAMO,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,MADa;AAErBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFY;AAGrBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBhB,UAAAA,KAAK,EAACA,KADa;AAEnBI,UAAAA,QAAQ,EAACA,QAFU;AAGnBF,UAAAA;AAHmB,SAAf;AAHe,OAAvB;AAUAe,MAAAA,KAAK,CAAC,oCAAD,EAAuCN,cAAvC,CAAL,CACGO,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAG;AACX,YAAGA,IAAI,CAACC,OAAL,KAAiB,sBAApB,EAA2C;AACzCvB,UAAAA,GAAG,CAACU,QAAJ,CAAahB,OAAO,CAAC4B,IAAI,CAACE,WAAN,CAApB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAtB,UAAAA,GAAG,CAACU,QAAJ,CAAajB,MAAM,EAAnB;AACD,SAJD,MAKI;AACFkC,UAAAA,KAAK,CAACL,IAAI,CAACC,OAAN,CAAL;AACD;AACF,OAXH;AAYD,KAvBD,MAwBI;AACAI,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ;;AAED,sBACI,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE3B,GAAG,CAAC4B,KAAJ,CAAUjB,QADlB;AAEE,IAAA,mBAAmB,EAAEhB,UAFvB;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,OAAO,EAAEc,WAJX;AAKE,uBAAgB,0BALlB;AAME,wBAAiB,gCANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4C,UAA5C,CARF,eASE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAGoB,KAAD,IAAS;AAACzB,MAAAA,OAAO,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AAA4B,KALlD;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,KAAK,EAAC,eAHR;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAGF,KAAD,IAAS;AAAC3B,MAAAA,QAAQ,CAAC2B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AAA6B,KALnD;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAGF,KAAD,IAAS;AAACvB,MAAAA,OAAO,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AAA4B,KALlD;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAyBE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,KAAK,EAAC,kBAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAGF,KAAD,IAAS;AAACrB,MAAAA,SAAS,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AAA8B,KALpD;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CATF,eA2CE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEpB,QAAjB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA3CF,CADJ;AAmDD","sourcesContent":["import React, { useContext,useState } from 'react';\nimport { AppContext } from '../../index';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { toggleReg,signIn,setUser } from '../../global/Reducer';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\n// This function will register the user into our MongoDB database.\nexport default function Register() {\n    const app = useContext(AppContext);\n    const [email,setEmail] = useState('');\n    const [name,setName] = useState('');\n    const [password,setPass] = useState('');\n    const [repass,setRepass] = useState('');\n\n  const handleClose = () => {\n    app.dispatch(toggleReg());\n  };\n\n  function register(){\n      if(repass===password){\n        const requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ \n            email:email,\n            password:password,\n            name\n           })\n        };\n\n        fetch('http://127.0.0.1:5001/admin/signup', requestOptions)\n          .then(response => response.json())\n          .then(data =>{\n            if(data.message === \"new Admin registered\"){\n              app.dispatch(setUser(data.createdUser));\n              console.log(data);\n              app.dispatch(signIn());\n            }\n            else{\n              alert(data.message);\n            }\n          });\n      }\n      else{\n          alert(\"Password didn't matched.. Try again\");\n      }\n  }\n\n  return (\n      <Dialog\n        open={app.state.register}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Register\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Name\"\n            type=\"text\"\n            onChange={(event)=>{setName(event.target.value)}}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Email Address\"\n            type=\"email\"\n            onChange={(event)=>{setEmail(event.target.value)}}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={(event)=>{setPass(event.target.value)}}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Re-type password\"\n            type=\"password\"\n            onChange={(event)=>{setRepass(event.target.value)}}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={register} color=\"primary\" variant=\"contained\">\n            Register\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}"]},"metadata":{},"sourceType":"module"}