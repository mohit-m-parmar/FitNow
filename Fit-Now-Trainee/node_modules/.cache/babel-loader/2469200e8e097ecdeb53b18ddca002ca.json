{"ast":null,"code":"var _jsxFileName = \"/Users/sarvesh/Desktop/FIT-NOW/fit_now_trainee/src/components/Recommendations.js\";\nimport React, { useContext } from 'react';\nimport { AppContext } from '../index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardList from './CardList';\nimport Typography from '@material-ui/core/Typography';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { Grid } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '85%',\n    padding: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2)\n  }\n}));\n\nfunction Reccomendations(_ref) {\n  let {\n    trainers\n  } = _ref;\n  const app = useContext(AppContext);\n  const classes = useStyles();\n  const pref = app.state.user.pref;\n  console.log(pref);\n  let t = [];\n\n  if (pref) {\n    const arr = pref.split(\",\");\n    console.log(arr);\n\n    for (let i = 0; i < arr.length; i++) {\n      let robots = trainers.filter(robot => {\n        return robot.specialization.toLowerCase().includes(arr[i].toLowerCase());\n      });\n      t = t.concat(robots);\n    }\n  }\n\n  const trainerArr = t;\n  console.log(\"t:\", t);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Our Reccomendations based on your preference\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, trainerArr.length ? /*#__PURE__*/React.createElement(CardList, {\n    robots: trainerArr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(NotInterestedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"No results\"))));\n}\n\nexport default Reccomendations;","map":{"version":3,"sources":["/Users/sarvesh/Desktop/FIT-NOW/fit_now_trainee/src/components/Recommendations.js"],"names":["React","useContext","AppContext","makeStyles","CardList","Typography","NotInterestedIcon","Grid","useStyles","theme","root","width","padding","spacing","title","margin","Reccomendations","trainers","app","classes","pref","state","user","console","log","t","arr","split","i","length","robots","filter","robot","specialization","toLowerCase","includes","concat","trainerArr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAC,KADJ;AAEFC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFP,GAD+B;AAKrCC,EAAAA,KAAK,EAAC;AACFC,IAAAA,MAAM,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd;AADN;AAL+B,CAAZ,CAAD,CAA5B;;AAUA,SAASG,eAAT,OAAqC;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AACjC,QAAMC,GAAG,GAAGjB,UAAU,CAACC,UAAD,CAAtB;AACA,QAAMiB,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,IAAI,GAAGF,GAAG,CAACG,KAAJ,CAAUC,IAAV,CAAeF,IAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,MAAIK,CAAC,GAAG,EAAR;;AACA,MAAGL,IAAH,EAAQ;AACJ,UAAMM,GAAG,GAAGN,IAAI,CAACO,KAAL,CAAW,GAAX,CAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;;AACA,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,GAAG,CAACG,MAAlB,EAAyBD,CAAC,EAA1B,EAA6B;AACzB,UAAIE,MAAM,GAAGb,QAAQ,CAACc,MAAT,CAAgBC,KAAK,IAAE;AAAC,eAAOA,KAAK,CAACC,cAAN,CAAqBC,WAArB,GAAmCC,QAAnC,CAA4CT,GAAG,CAACE,CAAD,CAAH,CAAOM,WAAP,EAA5C,CAAP;AAAyE,OAAjG,CAAb;AACAT,MAAAA,CAAC,GAAGA,CAAC,CAACW,MAAF,CAASN,MAAT,CAAJ;AACP;AACA;;AACD,QAAMO,UAAU,GAAGZ,CAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBC,CAAjB;AAEA,sBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEN,OAAO,CAACL,KAA/B;AAAsC,IAAA,OAAO,EAAC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADA,eAEA;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI2B,UAAU,CAACR,MAAX,gBACC,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEQ,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,eAED,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,CALL,CAFA,CADJ;AAgBH;;AAED,eAAerB,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { AppContext } from '../index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardList from './CardList';\nimport Typography from '@material-ui/core/Typography';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width:'85%',\n        padding: theme.spacing(2)\n    },\n    title:{\n        margin: theme.spacing(2),\n    },\n  }));\n\nfunction Reccomendations({trainers}) {\n    const app = useContext(AppContext);\n    const classes = useStyles();\n    const pref = app.state.user.pref;\n    console.log(pref)\n    let t = [];\n    if(pref){\n        const arr = pref.split(\",\");\n        console.log(arr);\n        for(let i=0;i<arr.length;i++){\n            let robots = trainers.filter(robot=>{return robot.specialization.toLowerCase().includes(arr[i].toLowerCase())});\n            t = t.concat(robots)\n    }\n    }\n    const trainerArr = t;\n    console.log(\"t:\",t)\n    \n    return (\n        <Grid container justify=\"center\">\n        <Typography className={classes.title} variant=\"h4\">Our Reccomendations based on your preference</Typography>\n        <div className={classes.root}>\n        {\n            trainerArr.length?\n            (<CardList robots={trainerArr} />)\n            :\n            (<Grid container justify=\"center\">\n            <NotInterestedIcon />\n            <Typography variant=\"subtitle1\">No results</Typography>\n            </Grid>)\n        }\n        </div>\n        </Grid>\n    )\n}\n\nexport default Reccomendations;"]},"metadata":{},"sourceType":"module"}