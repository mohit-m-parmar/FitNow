{"ast":null,"code":"var _jsxFileName = \"/Users/mohitparmar/Documents/FIT-NOW/fit_now_trainee/src/components/Recommendations.js\";\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardList from \"./CardList\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\nimport { Grid } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"85%\",\n    padding: theme.spacing(2)\n  },\n  title: {\n    margin: theme.spacing(2)\n  }\n}));\n\nfunction Reccomendations(_ref) {\n  let {\n    trainers\n  } = _ref;\n  const app = useContext(AppContext);\n  const classes = useStyles();\n  const pref = app.state.user.pref;\n  console.log(pref);\n  let t = [];\n\n  if (pref) {\n    const arr = pref.split(\",\");\n    console.log(arr);\n\n    for (let i = 0; i < arr.length; i++) {\n      let robots = trainers.filter(robot => {\n        return robot.specialization.toLowerCase().includes(arr[i].toLowerCase());\n      });\n      t = t.concat(robots);\n    }\n  }\n\n  const trainerArr = t;\n  console.log(\"t:\", t);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Our Reccomendations based on your preference\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, trainerArr.length ? /*#__PURE__*/React.createElement(CardList, {\n    robots: trainerArr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NotInterestedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"No results\"))));\n}\n\nexport default Reccomendations;","map":{"version":3,"sources":["/Users/mohitparmar/Documents/FIT-NOW/fit_now_trainee/src/components/Recommendations.js"],"names":["React","useContext","AppContext","makeStyles","CardList","Typography","NotInterestedIcon","Grid","useStyles","theme","root","width","padding","spacing","title","margin","Reccomendations","trainers","app","classes","pref","state","user","console","log","t","arr","split","i","length","robots","filter","robot","specialization","toLowerCase","includes","concat","trainerArr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFL,GADiC;AAKvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd;AADH;AALgC,CAAZ,CAAD,CAA5B;;AAUA,SAASG,eAAT,OAAuC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,QAAMC,GAAG,GAAGjB,UAAU,CAACC,UAAD,CAAtB;AACA,QAAMiB,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,IAAI,GAAGF,GAAG,CAACG,KAAJ,CAAUC,IAAV,CAAeF,IAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,MAAIK,CAAC,GAAG,EAAR;;AACA,MAAIL,IAAJ,EAAU;AACR,UAAMM,GAAG,GAAGN,IAAI,CAACO,KAAL,CAAW,GAAX,CAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,UAAIE,MAAM,GAAGb,QAAQ,CAACc,MAAT,CAAiBC,KAAD,IAAW;AACtC,eAAOA,KAAK,CAACC,cAAN,CACJC,WADI,GAEJC,QAFI,CAEKT,GAAG,CAACE,CAAD,CAAH,CAAOM,WAAP,EAFL,CAAP;AAGD,OAJY,CAAb;AAKAT,MAAAA,CAAC,GAAGA,CAAC,CAACW,MAAF,CAASN,MAAT,CAAJ;AACD;AACF;;AACD,QAAMO,UAAU,GAAGZ,CAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBC,CAAlB;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,cAAc,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEN,OAAO,CAACL,KAA/B;AAAsC,IAAA,OAAO,EAAC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,eAIE;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG2B,UAAU,CAACR,MAAX,gBACC,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEQ,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,cAAc,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAJJ,CAJF,CADF;AAiBD;;AAED,eAAerB,eAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { AppContext } from \"../index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardList from \"./CardList\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"85%\",\n    padding: theme.spacing(2),\n  },\n  title: {\n    margin: theme.spacing(2),\n  },\n}));\n\nfunction Reccomendations({ trainers }) {\n  const app = useContext(AppContext);\n  const classes = useStyles();\n  const pref = app.state.user.pref;\n  console.log(pref);\n  let t = [];\n  if (pref) {\n    const arr = pref.split(\",\");\n    console.log(arr);\n    for (let i = 0; i < arr.length; i++) {\n      let robots = trainers.filter((robot) => {\n        return robot.specialization\n          .toLowerCase()\n          .includes(arr[i].toLowerCase());\n      });\n      t = t.concat(robots);\n    }\n  }\n  const trainerArr = t;\n  console.log(\"t:\", t);\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Typography className={classes.title} variant=\"h4\">\n        Our Reccomendations based on your preference\n      </Typography>\n      <div className={classes.root}>\n        {trainerArr.length ? (\n          <CardList robots={trainerArr} />\n        ) : (\n          <Grid container justifyContent=\"center\">\n            <NotInterestedIcon />\n            <Typography variant=\"subtitle1\">No results</Typography>\n          </Grid>\n        )}\n      </div>\n    </Grid>\n  );\n}\n\nexport default Reccomendations;\n"]},"metadata":{},"sourceType":"module"}